Phase:  Meteo
Input: Token Lookup Split Morph
Options: control = appelt

 Macro: ADJ
(
({Morph.pos == adverb})[0,2]
({Morph.pos == verb, Morph.representation == participle} | {Morph.pos == a-pronoun}| {Morph.pos == adjective} )[1, 4]
)

Rule: 1_squall // шквалистый ветер
(
({Morph.baseForm == "шквалистый"})
({Morph.baseForm == "ветер"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "squall"}

// Rule: 2_whirlwind // Смерч

Rule: 3_downpour // ливень
(
({Morph.baseForm == "сильный"})
({Morph.baseForm == "ливень"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "downpour"}

Rule: 4_snow // снег
(
({Morph.baseForm == "сильный"})
(({Morph.baseForm == "снег"}) | ({Morph.baseForm == "снегопад"}))
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "snow"}

Rule: 5_hail // град
(
(({Morph.baseForm == "сильный"}) | ({Morph.baseForm == "пойти"})| ({Morph.baseForm == "идти"}))
({Morph.baseForm == "град"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "hail"}

Rule: 6_snowstorm // метель
(
(({Morph.baseForm == "сильный"}) | ({Morph.baseForm == "начаться"}))
({Morph.baseForm == "метель"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "snowstorm"}

// Rule: 7_sandstorm // песчаная буря

Rule: 8_fog // туман
(
(({Morph.baseForm == "сильный"}) | ({Morph.baseForm == "начаться"})| ({Morph.baseForm == "сплошной"}))
({Morph.baseForm == "туман"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "fog"}

Rule: 9_frost // мороз
(
(({Morph.baseForm == "сильный"}) | ({Morph.baseForm == "начаться"}))
({Morph.baseForm == "мороз"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "frost"}

Rule: 10_heat // жара
(
(({Morph.baseForm == "сильный"}) | ({Morph.baseForm == "начаться"})| ({Morph.baseForm == "стоять"}))
({Morph.baseForm == "жара"})
)
:bind -->
:bind.Threat_Meteo = {threat_indicator = "heat"}


Rule: Skip

((({Morph.baseForm == "угроза"})({Token})[1,5](({Morph.baseForm == "миновать"}) // 111
| ({Morph.baseForm == "ликвидировать"}) | ({Morph.baseForm == "отступать"})))
|
(({Morph.pos == "verb", Morph.tense == "past", Morph.aspect == "imperfect" }) ({Morph.baseForm == "угроза"})({Token})[1,2])
)
:skip -->
{
gate.AnnotationSet sk = (gate.AnnotationSet)bindings.get("skip");
inputAS.removeAll(sk);
}

