Phase:  Collapse
Input: Token Lookup Split Morph
Options: control = appelt

 Macro: ADJ
(
({Morph.pos == adverb})?
({Morph.pos == verb, Morph.representation == participle} | {Morph.pos == a-pronoun}| {Morph.pos == adjective} )[0, 4]
)

Rule: Crack // по дому пошла трещина
((
(({Token.string == "по"})|({Token.string == "По"})|
({Token.string == "на"})|({Token.string == "На"})|
({Token.string == "в"})|({Token.string == "В"}))
(ADJ)
({Lookup.majorType == building})
({Lookup.majorType == being})?
({Lookup.majorType == crack})
)|
(
({Lookup.majorType == crack})    // трещина в доме
({Lookup.majorType == being})?
(({Token.string == "по"})|({Token.string == "на"})|({Token.string == "в"}))
(ADJ)
({Lookup.majorType == building})
))
:bind -->
:bind.Threat_BuildingCollapse = {threat_indicator = "crack_in_wall", rule = "Crack"}

Rule: Crooked // здание просело, фундамент просел
(
({Lookup.majorType == building})
({Lookup.majorType == destroy_verb, Lookup.ProperName == "проседать"})
)
:bind -->
:bind.Threat_BuildingCollapse = {threat_indicator = "crooked_wall"}

Rule: Flood // подвал затопило
(
(({Lookup.majorType == flood})({Lookup.majorType == building})) |
(({Lookup.majorType == building})({Lookup.majorType == flood}))
)
:bind -->
:bind.Threat_BuildingCollapse = {threat_indicator = "building_flood"}

Rule: Skip
// Каждая попытка делает трещину в стене, за которой находится твоя цель.
//трещины на потолке напоминают
//смотреть на эти трещины в потолке
 // избегать трещин на стенах
 //затопили подвалы
 // трещина на стене как бы намекает

(
(({Token.string == "попытка"})
({Token.string == "делает"})
({Token.string == "трещину"})
({Token.string == "в"})
({Token.string == "стене"}))
|
(({Token.string == "трещины"})
({Token.string == "на"})
({Token.string == "потолке"})
({Token.string == "напоминают"}))
|
(({Token.string == "трещина"})
({Token.string == "на"})
({Token.string == "стене"})
({Token.string == "как"})
({Token.string == "бы"})
({Token.string == "намекает"})
)
|
(({Token.string == "смотреть"})
({Token.string == "на"})
({Token.string == "эти"})
({Token.string == "трещины"})
//({Token.string == "в"})
// ({Token.string == "потолке"})
)
|
(({Token.string == "избегать"})
({Token.string == "трещин"})
({Token.string == "на"})
({Token.string == "стенах"}))
|
(({Token.string == "немцы"})
({Token.string == "затопили"})
({Token.string == "подвалы"}))

//|(({Token})
//({Token.string == "дома"}))
)

:skip
 -->
{gate.AnnotationSet sk = (gate.AnnotationSet)bindings.get("skip");
inputAS.removeAll(sk);
}

Rule: Fact // здание обвалилось
(
(({Lookup.majorType == building})
({Lookup.majorType == destroy_verb, Lookup.ProperName != "проседать"}))|
(({Lookup.majorType == destroy_verb, Lookup.ProperName != "проседать"})
({Lookup.majorType == building}))
)
:bind -->
:bind.Fact_BuildingCollapse = {threat_indicator = "collapse"}