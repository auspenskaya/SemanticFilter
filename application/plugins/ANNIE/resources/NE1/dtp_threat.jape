Phase:  Hole
Input: Morph Lookup Split Token
Options: control = appelt

 Macro: ADJ
 (
 ({Morph.pos == adverb})?
 ({Morph.pos == verb, Morph.representation == participle} | {Morph.pos == a-pronoun}| {Morph.pos == adjective} )[0,4]
 )

 Macro: ROAD
 (
 (
 (
 (ADJ)[0,4]
 {Lookup.majorType == road, Lookup.ProperName != "покрытие"})
 |
 ({Lookup.majorType == road, Lookup.ProperName == "покрытие"})
 )
 (ADJ)?
 )

Rule: HoleOnHole // 1 яма на яме ...
(
(({Lookup.majorType == hole}) : hole1)
({Morph.pos == preposition})
(({Lookup.majorType == hole}): hole2)
)
:bind -->
//:bind.Threat_RoadAccident = {threat_indicator = "hole_on_road"}
{gate.AnnotationSet hole1 = (gate.AnnotationSet)bindings.get("hole1");
gate.Annotation hole1Ann = (gate.Annotation)hole1.iterator().next();
gate.AnnotationSet hole2 = (gate.AnnotationSet)bindings.get("hole2");
gate.Annotation hole2Ann = (gate.Annotation)hole2.iterator().next();
if (hole1Ann.getFeatures().get("ProperName") == hole2Ann.getFeatures().get("ProperName")) 
{gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", hole1Ann.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
inputAS.removeAll(hole1);
inputAS.removeAll(hole2);}
}

Rule: HoleOnRoad //2 провал грунта,  дыра в асфальте
(((ADJ) 
 (({Lookup.majorType == hole}):obj)
)({Morph.pos == preposition})?(ROAD))		
:bind -->
{gate.AnnotationSet obj = (gate.AnnotationSet)bindings.get("obj");
gate.Annotation objAnn = (gate.Annotation)obj.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", objAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
inputAS.removeAll(obj);
}  

Rule: RoadWithHoles  //3 дорога в ямах
(
(ROAD)({Morph.pos == preposition})?
((ADJ)(({Lookup.majorType == hole}):obj))
)
:bind -->
{gate.AnnotationSet obj = (gate.AnnotationSet)bindings.get("obj");
gate.Annotation objAnn = (gate.Annotation)obj.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", objAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
inputAS.removeAll(obj);
}  

Rule: RideInHole 		//4  влететь в яму
(({Lookup.majorType == ridein_verb})({Morph.pos == preposition} )   
(ADJ)(({Lookup.majorType == hole}):obj))
:bind -->
{gate.AnnotationSet obj = (gate.AnnotationSet)bindings.get("obj");
gate.Annotation objAnn = (gate.Annotation)obj.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", objAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
inputAS.removeAll(obj);
}   

Rule: RideInObject // 5 налететь на объект
(({Lookup.majorType == ridein_verb})({Morph.pos == preposition} )
(ADJ)(({Lookup.majorType == object}):obj))
:bind -->
{gate.AnnotationSet obj = (gate.AnnotationSet)bindings.get("obj");
gate.Annotation objAnn = (gate.Annotation)obj.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", objAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
inputAS.removeAll(obj);
}   

Rule: RideInObject2 //  6 на объект налететь
((({Morph.pos == preposition} )
(ADJ) (({Lookup.majorType == object}):obj)) ({Lookup.majorType == ridein_verb}))
:bind -->
{gate.AnnotationSet obj = (gate.AnnotationSet)bindings.get("obj");
gate.Annotation objAnn = (gate.Annotation)obj.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", objAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Threat_RoadAccident", features);
}

Rule: Skip
// Ямы на дорогах стали причиной случайного
(
(
(({Token.string == "Ямы"})
({Token.string == "на"})
({Token.string == "дорогах"})
({Token.string == "стали"})
({Token.string == "причиной"})
({Token.string == "случайного"}))
)
|
(
({Lookup.majorType == hole})
({Token.string == "на"})
({Token.string == "дорогом"})
)
)
:skip -->
{
gate.AnnotationSet sk = (gate.AnnotationSet)bindings.get("skip");
inputAS.removeAll(sk);
}

/*

2014г. лето. г. Липецк, угол Плеханова-Гагарина. Полгода после капитального ремонта, ужЕ сделан и ямочный ремонт
(через полгода после капитального ремонта!!!), но на переходе как стояла лужа, так и стоИт - подтекает колодец (крышка сзади девуш

*/
