Phase:  False_Threat
Input:  Morph Token Threat_RoadAccident Threat_Wildfire Threat_BuildingCollapse Threat_Flooding Fact_RoadAccident Fact_Wildfire Fact_BuildingCollapse Lookup
Threat_PowerFailure Threat_Utility Threat_Meteo
Options: control = appelt


Rule: False_Threat

(
((({Morph.baseForm == "например"})|((({Morph.baseForm == "не"})|({Morph.baseForm == "нет"})) (({Morph.baseForm == "быть"})|({Morph.baseForm == "ни"}))?  )
|({Morph.baseForm == "чтобы"})
|(({Morph.baseForm == "если"})({Token.kind == word})[0,3])
|({Morph.baseForm == "для"})
|({Morph.baseForm == "словно"})|({Morph.baseForm == "будто"})|({Morph.baseForm == "нет"})
|({Morph.baseForm == "почти"})|({Morph.baseForm == "каждый"})
|({Morph.baseForm == "устранение"})|({Morph.baseForm == "возможный"})
|(({Morph.baseForm == "во"}) ({Morph.baseForm == "время"}))
|({Morph.baseForm == "ликвидация"}) |({Morph.baseForm == "мочь"})
|({Morph.baseForm == "где"})|({Morph.baseForm == "уборка"})
)
(({Threat_RoadAccident})|
({Threat_Wildfire})|
({Threat_BuildingCollapse})|
({Threat_Flooding})|
({Threat_PowerFailure})|
({Threat_Utility})|
({Threat_Meteo})|
({Fact_RoadAccident})|
({Fact_Wildfire})|
({Fact_BuildingCollapse})))
|
((({Threat_RoadAccident})|
({Threat_Wildfire})|
({Threat_BuildingCollapse})|
({Threat_Flooding})|
({Threat_PowerFailure})|
({Threat_Utility})|
({Threat_Meteo})|
({Fact_RoadAccident})|
({Fact_Wildfire})|
({Fact_BuildingCollapse}))

(({Morph.baseForm == "например"}) |
(({Morph.baseForm == "не"}) (({Morph.baseForm == "видеть"}) | ({Morph.baseForm == "надо"})))
|({Morph.baseForm == "слеза"}) |({Morph.baseForm == "сосед"} )
|({Morph.baseForm == "прогнозировать"}) |({Morph.baseForm == "самолет"}) |({Morph.baseForm == "нет"})
)

)
)
: bind
 -->
{
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind");
inputAS.removeAll(bindSet);

}

Rule: False_Threat

((({Threat_RoadAccident})|
({Threat_BuildingCollapse})|
({Fact_RoadAccident})|
({Fact_BuildingCollapse}))
(
({Morph.baseForm == "система"})|
({Token.string == "следует"})
)
)
: bind
 -->
{
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind");
inputAS.removeAll(bindSet);

}

Rule: False_Threat

(
(({Token.string == "можно"})|({Token.string == "необходимо"}))
({Fact_Wildfire})
)
: bind
 -->
{
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind");
inputAS.removeAll(bindSet);

}

Rule: False_Prospekt
((
({Token.orth == "lowercase"})
({Token.string == "и"})
({Token.string == "пр"})
({Token.kind == "punctuation"})
))
:skip -->
{
gate.AnnotationSet sk = (gate.AnnotationSet)bindings.get("skip");
inputAS.removeAll(sk);
}