Phase:  Wildfire
Input: Token Lookup Morph
Options: control = appelt

 Macro: ADJ
(
({Morph.pos == adverb})?
({Morph.pos == verb, Morph.representation == participle} | {Morph.pos == a-pronoun}| {Morph.pos == adjective} )[0, 4]
)

 Macro: ROAD
 (
 (
 (
 (ADJ)[0,4]
 {Lookup.majorType == road, Lookup.ProperName != "покрытие"})
 |
 ({Lookup.majorType == road, Lookup.ProperName == "покрытие"})
 )
 (ADJ)?
 )


Macro: IN_FOREST
(
(({Token, Token.string == "в"})|({Token, Token.string == "на"})|({Token, Token.string == "над"}))
(ADJ)
({Lookup.majorType == forest})
)

Macro: NEAR
(
({Token, Token.string == "около"})|
(({Token, Token.string == "рядом"})({Token, Token.string == "с"}))|
(({Token, Token.string == "в"})({Token, Token.string == "районе"}))
)

Rule: DryGrass // сухая трава
(
(({Lookup.majorType == dry})
({Lookup.majorType == grass})
(IN_FOREST))
|
((IN_FOREST)
({Lookup.majorType == dry})
({Lookup.majorType == grass}))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "dry_grass"}

Rule: DryTrees // сухие деревья
(
((({Lookup.majorType == dry})|({Lookup.majorType == rubbish_adj}))
({Lookup.majorType == trees})
(IN_FOREST))
|
((IN_FOREST)
(({Lookup.majorType == dry})|({Lookup.majorType == rubbish_adj}))
({Lookup.majorType == trees}))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "dry_trees"}


Rule: Rubbish // мусор, намусорили в лесу
(
((({Lookup.majorType == rubbish})|({Lookup.majorType == fire_litter_verb}))
(IN_FOREST))
|
((IN_FOREST)
(({Lookup.majorType == rubbish})|({Lookup.majorType == fire_litter_verb})))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "rubbish"}

Rule: Peat //
(
(({Lookup.majorType == peat})
(IN_FOREST))
|
(
(({Morph.baseForm == "забросить"})|
(({Morph.baseForm == "полость"})({Morph.baseForm == "в"}))|
({Morph.baseForm == "самовозгорание"}))
({Lookup.majorType == peat})
)
|
((({Morph.baseForm == "накрыть"})| ({Morph.baseForm == "накрывать"}) )
({Morph.baseForm == "дым"}))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "peat"}


Rule: Threat_Peat //торф горит
(
(({Lookup.majorType == peat})({Lookup.majorType == burn})) |
(({Lookup.majorType == burn})({Lookup.majorType == peat}))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "peat"}


Rule: Threat_Peat2 // пожар в торфянике
(
({Lookup.majorType == fire, Lookup.ProperName == "пожар"}):f
(
(({Token.kind == word})
({Lookup.majorType == peat}))
)
)
:bind -->
:f.Threat_Wildfire = {threat_indicator = "peat"}

Rule: FactFire
(
(({Lookup.majorType == forest})({Lookup.majorType == burn})) |
(({Lookup.majorType == burn})({Lookup.majorType == forest})) | // лес горит
((({Lookup.majorType == burn})| ({Lookup.majorType == fire}) ) (({Morph.baseForm == "на"})(ROAD))? (NEAR) ({Token.orth == upperInitial })) // горит около
)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "fire", rule = "FactFire"}

Rule: FactFire1 // пожар в районе, в лесничестве, под
(
({Lookup.majorType == fire, Lookup.ProperName == "пожар"}):f
(
((({Token, Token.string == "в"})| ({Token, Token.string == "из"}) )
(({Token.orth == upperInitial })
({Lookup.majorType == region})))
|
(({Token, Token.string == "под"})
({Token.orth == upperInitial}))
)
)
:bind -->
:f.Fact_Wildfire = {threat_indicator = "fire"}

Rule: FactSmoke // огонь, дым в лесу
(
({Lookup.majorType == fire}):f
(IN_FOREST)
)
:bind -->
{gate.AnnotationSet fire = (gate.AnnotationSet)bindings.get("f");
gate.Annotation fireAnn = (gate.Annotation)fire.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", fireAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Fact_Wildfire", features);
}

Rule: FactSmoke2 // в  лесу дым
(
(IN_FOREST)
({Lookup.majorType == being})?
({Lookup.majorType == fire}):f
)
:bind -->
{gate.AnnotationSet fire = (gate.AnnotationSet)bindings.get("f");
gate.Annotation fireAnn = (gate.Annotation)fire.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", fireAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Fact_Wildfire", features);
}

Rule: FactSmoke3 // лес в огне
(
({Lookup.majorType == forest})({Token, Token.string == "в"})({Lookup.majorType == fire}):f
)
:bind -->
{gate.AnnotationSet fire = (gate.AnnotationSet)bindings.get("f");
gate.Annotation fireAnn = (gate.Annotation)fire.iterator().next();
gate.FeatureMap features = Factory.newFeatureMap();
features.put("threat_indicator", fireAnn.getFeatures().get("threat_indicator"));
gate.AnnotationSet bind = (gate.AnnotationSet)bindings.get("bind");
outputAS.add(bind.firstNode(), bind.lastNode(), "Fact_Wildfire", features);
}

Rule: FactFireSoot
(
(({Lookup.majorType == soot})({Token, Token.string == "на"})
({Lookup.majorType == soot_on, Lookup.ProperName != "дорога" })) |
(({Lookup.majorType == soot})({Token, Token.string == "на"})
({Lookup.majorType == soot_on, Lookup.ProperName == "дорога" })(IN_FOREST))
)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "soot"}


Rule: FactFireBurningSmell
(
(({Lookup.majorType == smell})({Lookup.majorType == burn})) |
(({Lookup.majorType == burn})({Lookup.majorType == smell}))

)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "burning_smell"}


// Для кейса
Rule: FactFireDanger
(
({Morph.baseForm == "класс"})
({Morph.baseForm == "пожарный"})
({Morph.baseForm == "опасность"})

)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "fire", rule = "FactFireDanger"}


Rule: FactFireInForest
(
(({Morph.baseForm == "лесной"}))
({Lookup.majorType == fire})
)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "fire", rule = "FactFireDanger"}


Rule: FactFireInPeat
(
(({Morph.baseForm == "торфяной"}))
({Lookup.majorType == fire})
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "peat"}


Rule: FactFireBurnGrass
(
({Lookup.majorType == fire})
(
(({Lookup.majorType == dry})({Lookup.majorType == grass})) |
((({Morph.baseForm == "лесной"}))({Morph.baseForm == "подстилка"}))
))
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "fire", rule = "FactFireBurnGrass"}


Rule: FactFireBurnGrassPeat
(
({Lookup.majorType == fire})
(({Morph.baseForm == "торфяной"})({Morph.baseForm == "подстилка"}))
)
:bind -->
:bind.Threat_Wildfire = {threat_indicator = "peat"}


Rule: FactFireBurnGrass
(
({Lookup.majorType == fire})
(
(({Lookup.majorType == dry})({Lookup.majorType == grass})) |
(({Morph.baseForm == "лесной"})({Morph.baseForm == "подстилка"}))
))
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "fire", rule = "FactFireBurnGrass"}

Rule: FactCleanForest
(

(({Lookup.majorType == clean})
(((IN_FOREST))|
({Lookup.majorType == forest})|
({Lookup.majorType == rubbish})|
({Morph.baseForm == "сухостой"})
))
|
(({Morph.baseForm == "субботник"})
(IN_FOREST))
|
(({Morph.baseForm == "лесной"})
({Morph.baseForm == "субботник"}))
|
(({Lookup.majorType == fire})
({Lookup.majorType == extinguish}))
|
(({Lookup.majorType == extinguish})
({Lookup.majorType == fire}))
)
:bind -->
:bind.Fact_Wildfire = {threat_indicator = "clean"}




Rule: Skip
// леса горят багрянцем
// сухая ветвь
// кто кинет окурок в лес

((({Token.string == "леса"})
({Token.string == "горят"})
({Token.string == "багрянцем"}))
|
(({Token.string == "медью"})
({Token.string == "горят"})
({Token.string == "леса"}))
|
(({Token.string == "как"})
({Token.string == "сухая"})
({Token.string == "ветвь"}))
|
(({Token.string == "кто"})
({Token.string == "кинет"})
({Token.string == "окурок"})
({Token.string == "в"})
({Token.string == "лес"}))

)
:skip
 -->
{

gate.AnnotationSet sk = (gate.AnnotationSet)bindings.get("skip");
inputAS.removeAll(sk);
}