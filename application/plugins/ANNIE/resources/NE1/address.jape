Phase:  Address
Input: Token Split Lookup Morph
Options: control = appelt


Rule: Address_inv
(
(({Token.orth == upperInitial, Token.length >2}) : name
({Lookup.majorType == street}): st)
)
: bind  -->
{
gate.AnnotationSet nameSet = (gate.AnnotationSet)bindings.get("name");
gate.AnnotationSet morphSet = inputAS.getContained(nameSet.firstNode().getOffset(), nameSet.lastNode().getOffset()).get("Morph");
if (morphSet != null && morphSet.size() > 0){
gate.Annotation morphAnn = (gate.Annotation)morphSet.iterator().next();
String name = morphAnn.getFeatures().get("baseForm").toString();
// System.out.println("name = " + name);
gate.AnnotationSet strSet = (gate.AnnotationSet)bindings.get("st");
gate.Annotation strAnn = (gate.Annotation)strSet.iterator().next();
String street = strAnn.getFeatures().get("ProperName").toString();
String str_gend = strAnn.getFeatures().get("gend").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ое";}
 }
else {
gate.Annotation nameAnn = (gate.Annotation)nameSet.iterator().next();
name = nameAnn.getFeatures().get("string").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ую") || n.equals("ой") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("го") || n.equals("му")))
 {name = name.substring(0, name.length()-2) + "е";}
 }
}
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind"); // 1
gate.Annotation bindAnn = (gate.Annotation)bindSet.iterator().next();
String street_name = street + " " + name;
gate.FeatureMap features_bind = Factory.newFeatureMap(); // 2
features_bind.put("view_name", street_name);
features_bind.put("Rule", "Address_inv");
outputAS.add(bindSet.firstNode(), bindSet.lastNode(), "Placement", features_bind);
}
}

Rule: Address1
((({Lookup.majorType == street, Lookup.short == true}): st ({Token.string == "."})?)
({Token.orth == upperInitial, Token.length >2, Token.string != "Москвы" }): name)
:bind -->
{
gate.AnnotationSet nameSet = (gate.AnnotationSet)bindings.get("name");
gate.AnnotationSet morphSet = inputAS.getContained(nameSet.firstNode().getOffset(), nameSet.lastNode().getOffset()).get("Morph");
if (morphSet != null && morphSet.size() > 0){
gate.Annotation morphAnn = (gate.Annotation)morphSet.iterator().next();
String name = morphAnn.getFeatures().get("baseForm").toString();
gate.AnnotationSet strSet = (gate.AnnotationSet)bindings.get("st");
gate.Annotation strAnn = (gate.Annotation)strSet.iterator().next();
String street = strAnn.getFeatures().get("ProperName").toString();
String str_gend = strAnn.getFeatures().get("gend").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ое";}
 }
else {
gate.Annotation nameAnn = (gate.Annotation)nameSet.iterator().next();
name = nameAnn.getFeatures().get("string").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ую") || n.equals("ой") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("го") || n.equals("му")))
 {name = name.substring(0, name.length()-2) + "е";}
 }
}
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind");
gate.Annotation bindAnn = (gate.Annotation)bindSet.iterator().next();
String street_name = street + " " + name;
gate.FeatureMap features_bind = Factory.newFeatureMap();
features_bind.put("view_name", street_name);
outputAS.add(bindSet.firstNode(), bindSet.lastNode(), "Placement", features_bind);
}}

Rule: Address2
((({Lookup.majorType == street, Lookup.short == false}): st)
({Token.orth == upperInitial, Token.length >2, Token.string != "Москвы" }): name)
:bind -->
{
gate.AnnotationSet nameSet = (gate.AnnotationSet)bindings.get("name");
gate.AnnotationSet morphSet = inputAS.getContained(nameSet.firstNode().getOffset(), nameSet.lastNode().getOffset()).get("Morph");
if (morphSet != null && morphSet.size() > 0){
gate.Annotation morphAnn = (gate.Annotation)morphSet.iterator().next();
String name = morphAnn.getFeatures().get("baseForm").toString();
gate.AnnotationSet strSet = (gate.AnnotationSet)bindings.get("st");
gate.Annotation strAnn = (gate.Annotation)strSet.iterator().next();
String street = strAnn.getFeatures().get("ProperName").toString();
String str_gend = strAnn.getFeatures().get("gend").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("ий") || n.equals("ый") ))
 {name = name.substring(0, name.length()-2) + "ое";}
 }
else {
gate.Annotation nameAnn = (gate.Annotation)nameSet.iterator().next();
name = nameAnn.getFeatures().get("string").toString();
if (name.length()>2){
String n = name.substring(name.length()-2, name.length());
if (str_gend.equals("f") &&  ( n.equals("ую") || n.equals("ой") ))
 {name = name.substring(0, name.length()-2) + "ая";}
if (str_gend.equals("n") &&  ( n.equals("го") || n.equals("му")))
 {name = name.substring(0, name.length()-2) + "е";}
 }
}
gate.AnnotationSet bindSet = (gate.AnnotationSet)bindings.get("bind");
gate.Annotation bindAnn = (gate.Annotation)bindSet.iterator().next();
String street_name = street + " " + name;
gate.FeatureMap features_bind = Factory.newFeatureMap();
features_bind.put("view_name", street_name);
outputAS.add(bindSet.firstNode(), bindSet.lastNode(), "Placement", features_bind);
}}


Rule: Region // в Чебоксарском районе
(
({Token.orth == upperInitial}) : name
({Lookup.majorType == region})  : r
)
:pl -->
{
gate.AnnotationSet nameSet = (gate.AnnotationSet)bindings.get("name");
gate.AnnotationSet morphSet = inputAS.getContained(nameSet.firstNode().getOffset(), nameSet.lastNode().getOffset()).get("Morph");
if (morphSet != null &&  morphSet.size() > 0 ){
gate.Annotation morphAnn = (gate.Annotation)morphSet.iterator().next();
String name = morphAnn.getFeatures().get("baseForm").toString();
if (name.length()>4 && morphAnn.getFeatures().get("pos").equals("adjective")){
gate.AnnotationSet rSet = (gate.AnnotationSet)bindings.get("r");
gate.Annotation rAnn = (gate.Annotation)rSet.iterator().next();
String reg = rAnn.getFeatures().get("ProperName").toString();
String r_gend = rAnn.getFeatures().get("gend").toString();
String n = name.substring(name.length()-2, name.length());
if (r_gend.equals("f") &&  ( n.equals("ий") || n.equals("ый")))
 {
 name = name.substring(0, name.length()-2) + "ая";
 }
String region_name = name + " " + reg;
gate.FeatureMap features_pl = Factory.newFeatureMap();
features_pl.put("view_name", region_name);
gate.AnnotationSet plSet = (gate.AnnotationSet)bindings.get("pl");
outputAS.add(plSet.firstNode(), plSet.lastNode(), "Placement", features_pl);
}
}
}

/*
Rule: Fire // пожар под
(
({Lookup.majorType == fire, Lookup.ProperName == "пожар"}):f
({Token, Token.string == "под"})
({Token.orth == upperInitial }) : pl
)
:bind -->
:pl.Placement = {String = "String"}

Rule: Location
(
({Lookup.majorType == location})
)
:bind -->
:bind.Placement = {String = "String"}

System.out.println("name");


*/

/*
Ошибки:

. Из области косяком

 на улице Карла Маркса - оба слова
 ул. Гагарина - не "улица гагарин"
  Яма на углу пересечений Победы и Володарского,п
 на перекрестке Ленина-Красноармейская , на перекрестке Рафиева и Есенина
На Чигрина – Садовой не работает светофор. ГАИ посылает всех…в горсовет #прикол
На пересечении Филимонова - Независимости  не работает светофор. Пробка. #minsk
 в Дмитровском муниципальном районе
 Гусевского городского округа
 Народ, кто ездит по трассе Бурмистрово-Завьялово?


*/